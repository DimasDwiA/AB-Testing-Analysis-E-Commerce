{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0d52b824",
   "metadata": {
    "papermill": {
     "duration": 0.007168,
     "end_time": "2024-09-06T02:32:29.635473",
     "exception": false,
     "start_time": "2024-09-06T02:32:29.628305",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Background**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dbe0878f",
   "metadata": {
    "papermill": {
     "duration": 0.006698,
     "end_time": "2024-09-06T02:32:29.648785",
     "exception": false,
     "start_time": "2024-09-06T02:32:29.642087",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "In this project, the company had developed a webpage on an e-commerce website, where the new webpage they had developed sought to increase the number of users who paid for their products. In this project, the company wanted to see if the new pages they developed had a significant effect on users so that the new pages developed could be implemented or it was possible that the new pages developed had no effect on users so they had to keep the old pages. For this reason, the data used had Two groups of equal size were created as the control and treatment groups, labeled A and B. The treatment group (B) was presented with the new web page while the control group (A) was presented with the old one, and the experiment was run. Data was collected for both groups, and then hypothesis testing was applied to determine whether or not the difference was significant."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a4c92bb",
   "metadata": {
    "papermill": {
     "duration": 0.00611,
     "end_time": "2024-09-06T02:32:29.661279",
     "exception": false,
     "start_time": "2024-09-06T02:32:29.655169",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## About Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de363b00",
   "metadata": {
    "papermill": {
     "duration": 0.006067,
     "end_time": "2024-09-06T02:32:29.673673",
     "exception": false,
     "start_time": "2024-09-06T02:32:29.667606",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "* **user_id**: unique users number\n",
    "* **timestamp**: time\n",
    "* **group**: treatment and control group\n",
    "* **landing_page**: old_page and new_page\n",
    "* **converted**: Sign up status after viewing the page (0-1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b1ae58e",
   "metadata": {
    "papermill": {
     "duration": 0.00602,
     "end_time": "2024-09-06T02:32:29.685994",
     "exception": false,
     "start_time": "2024-09-06T02:32:29.679974",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## AB Testing Steps "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76a23f06",
   "metadata": {
    "papermill": {
     "duration": 0.005991,
     "end_time": "2024-09-06T02:32:29.698618",
     "exception": false,
     "start_time": "2024-09-06T02:32:29.692627",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "1. **Create Hypothesis**\n",
    "* H0: There is no statistically significant difference between the old and new pages.\n",
    "* H1: There is a statistically significant difference between the old page and the new page. \n",
    "\n",
    "The purpose of this hypothesis is to determine whether a change (for example, a new page) provides significantly different results compared to the old page.\n",
    "\n",
    "2. **Checking Statistical Assumptions**\n",
    "**Normality Assumption**\n",
    "* H0: Data is normally distributed.\n",
    "* H1: Data is not normally distributed.\n",
    "\n",
    "If p-value < 0.05, we reject H0 and conclude that the data is not normally distributed (non-parametric is required). However, if the p-value ≥ 0.05, we fail to reject H0 and conclude that the data is normally distributed (parametric can be used).\n",
    "\n",
    "**Variance Homogeneity**\n",
    "* H0: The variances between groups are homogeneous (equal).\n",
    "* H1: Variances between groups are not homogeneous (different).\n",
    "\n",
    "*Note:\n",
    "* If the data meet the assumption of normality and homogeneous variance, use **T-test**.\n",
    "* If the data does not meet the assumption of normality (regardless of homogeneous variance status), use the **Mann-Whitney U test** (non-parametric test).\n",
    "* If the data meets the assumption of normality but does not meet homogeneous variance, use **Welch's t-test**.\n",
    "\n",
    "3. **Analyzing Results and conclusions** \n",
    "\n",
    "The hypothesis will be concluded based on the p-value obtained from the parametric/non-parametric test to be performed. This result will answer the question: Is there a significant difference between the new page and the old page?\n",
    "\n",
    "*Note: If the p-value of the statistical test is < 0.05, we reject H0 and conclude that there is a statistically significant difference between the old page and the new page. On the other hand, if the p-value ≥ 0.05, we fail to reject H0 and conclude that there is no statistically significant difference between the old page and the new page.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c7b11cf",
   "metadata": {
    "papermill": {
     "duration": 0.006098,
     "end_time": "2024-09-06T02:32:29.711415",
     "exception": false,
     "start_time": "2024-09-06T02:32:29.705317",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Import Libraries & Read Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "49cb23ef",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:29.726071Z",
     "iopub.status.busy": "2024-09-06T02:32:29.725643Z",
     "iopub.status.idle": "2024-09-06T02:32:31.985082Z",
     "shell.execute_reply": "2024-09-06T02:32:31.984103Z"
    },
    "papermill": {
     "duration": 2.269899,
     "end_time": "2024-09-06T02:32:31.987634",
     "exception": false,
     "start_time": "2024-09-06T02:32:29.717735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import scipy.stats as stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "db385d8c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.003037Z",
     "iopub.status.busy": "2024-09-06T02:32:32.002467Z",
     "iopub.status.idle": "2024-09-06T02:32:32.398991Z",
     "shell.execute_reply": "2024-09-06T02:32:32.397933Z"
    },
    "papermill": {
     "duration": 0.407485,
     "end_time": "2024-09-06T02:32:32.401813",
     "exception": false,
     "start_time": "2024-09-06T02:32:31.994328",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>group</th>\n",
       "      <th>landing_page</th>\n",
       "      <th>converted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>851104</td>\n",
       "      <td>11:48.6</td>\n",
       "      <td>control</td>\n",
       "      <td>old_page</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>804228</td>\n",
       "      <td>01:45.2</td>\n",
       "      <td>control</td>\n",
       "      <td>old_page</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>661590</td>\n",
       "      <td>55:06.2</td>\n",
       "      <td>treatment</td>\n",
       "      <td>new_page</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>853541</td>\n",
       "      <td>28:03.1</td>\n",
       "      <td>treatment</td>\n",
       "      <td>new_page</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>864975</td>\n",
       "      <td>52:26.2</td>\n",
       "      <td>control</td>\n",
       "      <td>old_page</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   user_id timestamp      group landing_page  converted\n",
       "0   851104   11:48.6    control     old_page          0\n",
       "1   804228   01:45.2    control     old_page          0\n",
       "2   661590   55:06.2  treatment     new_page          0\n",
       "3   853541   28:03.1  treatment     new_page          0\n",
       "4   864975   52:26.2    control     old_page          1"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "path = \"/kaggle/input/ecommerce-ab-testing-2022-dataset1/ecommerce_ab_testing_2022_dataset1/ab_data.csv\"\n",
    "df = pd.read_csv(path)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2d6d793a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.417915Z",
     "iopub.status.busy": "2024-09-06T02:32:32.416739Z",
     "iopub.status.idle": "2024-09-06T02:32:32.488313Z",
     "shell.execute_reply": "2024-09-06T02:32:32.486932Z"
    },
    "papermill": {
     "duration": 0.082519,
     "end_time": "2024-09-06T02:32:32.491203",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.408684",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 294480 entries, 0 to 294479\n",
      "Data columns (total 5 columns):\n",
      " #   Column        Non-Null Count   Dtype \n",
      "---  ------        --------------   ----- \n",
      " 0   user_id       294480 non-null  int64 \n",
      " 1   timestamp     294480 non-null  object\n",
      " 2   group         294480 non-null  object\n",
      " 3   landing_page  294480 non-null  object\n",
      " 4   converted     294480 non-null  int64 \n",
      "dtypes: int64(2), object(3)\n",
      "memory usage: 11.2+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "39cb9833",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.507679Z",
     "iopub.status.busy": "2024-09-06T02:32:32.507135Z",
     "iopub.status.idle": "2024-09-06T02:32:32.605737Z",
     "shell.execute_reply": "2024-09-06T02:32:32.604394Z"
    },
    "papermill": {
     "duration": 0.110067,
     "end_time": "2024-09-06T02:32:32.608866",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.498799",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "user_id         290585\n",
       "timestamp        35993\n",
       "group                2\n",
       "landing_page         2\n",
       "converted            2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "491f3e6f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.625054Z",
     "iopub.status.busy": "2024-09-06T02:32:32.624292Z",
     "iopub.status.idle": "2024-09-06T02:32:32.631230Z",
     "shell.execute_reply": "2024-09-06T02:32:32.630206Z"
    },
    "papermill": {
     "duration": 0.017805,
     "end_time": "2024-09-06T02:32:32.633804",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.615999",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(294480, 5)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9dfb9b9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.650149Z",
     "iopub.status.busy": "2024-09-06T02:32:32.649732Z",
     "iopub.status.idle": "2024-09-06T02:32:32.697479Z",
     "shell.execute_reply": "2024-09-06T02:32:32.696381Z"
    },
    "papermill": {
     "duration": 0.059266,
     "end_time": "2024-09-06T02:32:32.700211",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.640945",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['user_id'].duplicated().sum()\n",
    "df = df.drop_duplicates(subset='user_id', keep=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5ff1b202",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.716070Z",
     "iopub.status.busy": "2024-09-06T02:32:32.715694Z",
     "iopub.status.idle": "2024-09-06T02:32:32.722591Z",
     "shell.execute_reply": "2024-09-06T02:32:32.721316Z"
    },
    "papermill": {
     "duration": 0.017724,
     "end_time": "2024-09-06T02:32:32.725011",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.707287",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(286690, 5)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "0ee9df4c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.740747Z",
     "iopub.status.busy": "2024-09-06T02:32:32.740343Z",
     "iopub.status.idle": "2024-09-06T02:32:32.793842Z",
     "shell.execute_reply": "2024-09-06T02:32:32.792631Z"
    },
    "papermill": {
     "duration": 0.064197,
     "end_time": "2024-09-06T02:32:32.796286",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.732089",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "user_id         0\n",
       "timestamp       0\n",
       "group           0\n",
       "landing_page    0\n",
       "converted       0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "5de13da3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.812771Z",
     "iopub.status.busy": "2024-09-06T02:32:32.812351Z",
     "iopub.status.idle": "2024-09-06T02:32:32.887862Z",
     "shell.execute_reply": "2024-09-06T02:32:32.886622Z"
    },
    "papermill": {
     "duration": 0.086799,
     "end_time": "2024-09-06T02:32:32.890553",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.803754",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "group      landing_page\n",
       "control    old_page        143293\n",
       "treatment  new_page        143397\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_group_page = df.groupby('group')['landing_page'].value_counts()\n",
    "count_group_page"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0cf6dd64",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.907580Z",
     "iopub.status.busy": "2024-09-06T02:32:32.907104Z",
     "iopub.status.idle": "2024-09-06T02:32:32.916767Z",
     "shell.execute_reply": "2024-09-06T02:32:32.915596Z"
    },
    "papermill": {
     "duration": 0.021009,
     "end_time": "2024-09-06T02:32:32.918979",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.897970",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "group      landing_page\n",
       "control    old_page        0.499819\n",
       "treatment  new_page        0.500181\n",
       "Name: count, dtype: float64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count_group_page / count_group_page.sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "452cb13b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.936618Z",
     "iopub.status.busy": "2024-09-06T02:32:32.936206Z",
     "iopub.status.idle": "2024-09-06T02:32:32.967864Z",
     "shell.execute_reply": "2024-09-06T02:32:32.966862Z"
    },
    "papermill": {
     "duration": 0.043016,
     "end_time": "2024-09-06T02:32:32.970325",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.927309",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>converted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>286690.000000</td>\n",
       "      <td>286690.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>788036.057184</td>\n",
       "      <td>0.119450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>91239.396095</td>\n",
       "      <td>0.324317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>630000.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>709036.250000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>788059.500000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>866998.750000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>945999.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             user_id      converted\n",
       "count  286690.000000  286690.000000\n",
       "mean   788036.057184       0.119450\n",
       "std     91239.396095       0.324317\n",
       "min    630000.000000       0.000000\n",
       "25%    709036.250000       0.000000\n",
       "50%    788059.500000       0.000000\n",
       "75%    866998.750000       0.000000\n",
       "max    945999.000000       1.000000"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7e8d05d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:32.987383Z",
     "iopub.status.busy": "2024-09-06T02:32:32.986982Z",
     "iopub.status.idle": "2024-09-06T02:32:33.063803Z",
     "shell.execute_reply": "2024-09-06T02:32:33.062585Z"
    },
    "papermill": {
     "duration": 0.08808,
     "end_time": "2024-09-06T02:32:33.066155",
     "exception": false,
     "start_time": "2024-09-06T02:32:32.978075",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>conv_rate</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>group</th>\n",
       "      <th>landing_page</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>control</th>\n",
       "      <th>old_page</th>\n",
       "      <td>0.120173</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>treatment</th>\n",
       "      <th>new_page</th>\n",
       "      <td>0.118726</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        conv_rate\n",
       "group     landing_page           \n",
       "control   old_page       0.120173\n",
       "treatment new_page       0.118726"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby(['group', 'landing_page']).agg(conv_rate=('converted', 'mean'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c0c5c5f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:33.084845Z",
     "iopub.status.busy": "2024-09-06T02:32:33.083851Z",
     "iopub.status.idle": "2024-09-06T02:32:33.154870Z",
     "shell.execute_reply": "2024-09-06T02:32:33.153376Z"
    },
    "papermill": {
     "duration": 0.083415,
     "end_time": "2024-09-06T02:32:33.157631",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.074216",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Old Page\n",
      "converted\n",
      "0    126073\n",
      "1     17220\n",
      "Name: count, dtype: int64\n",
      "New Page\n",
      "converted\n",
      "0    126372\n",
      "1     17025\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(\"Old Page\")\n",
    "print(df.loc[df['landing_page'] == 'old_page', 'converted'].value_counts())\n",
    "print(\"New Page\")\n",
    "print(df.loc[df['landing_page'] == 'new_page', 'converted'].value_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30ed9ffd",
   "metadata": {
    "papermill": {
     "duration": 0.007483,
     "end_time": "2024-09-06T02:32:33.173041",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.165558",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# AB Test"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06cdeebc",
   "metadata": {
    "papermill": {
     "duration": 0.00733,
     "end_time": "2024-09-06T02:32:33.188241",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.180911",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Normality Assumption\n",
    "\n",
    "**Normality Assumption**\n",
    "* H0: Data is normally distributed.\n",
    "* H1: Data is not normally distributed.\n",
    "\n",
    "If p-value < 0.05, we reject H0 and conclude that the data is not normally distributed (non-parametric is required). However, if the p-value ≥ 0.05, we fail to reject H0 and conclude that the data is normally distributed (parametric can be used)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fb63f731",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:33.205709Z",
     "iopub.status.busy": "2024-09-06T02:32:33.205277Z",
     "iopub.status.idle": "2024-09-06T02:32:33.251438Z",
     "shell.execute_reply": "2024-09-06T02:32:33.250315Z"
    },
    "papermill": {
     "duration": 0.058794,
     "end_time": "2024-09-06T02:32:33.254805",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.196011",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data is not normally distributed.\n",
      "p-value: 9.036752175762015e-178\n",
      "test_stat: 0.37923878278163115\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/scipy/stats/_axis_nan_policy.py:573: UserWarning: scipy.stats.shapiro: For N > 5000, computed p-value may not be accurate. Current N is 143293.\n",
      "  res = hypotest_fun_out(*samples, **kwds)\n"
     ]
    }
   ],
   "source": [
    "test_stat, pvalue= stats.shapiro(df.loc[df['landing_page'] == 'old_page', 'converted'])\n",
    "if pvalue < 0.05:\n",
    "    print(\"Data is not normally distributed.\")\n",
    "else:\n",
    "    print(\"Data is normally distributed.\")\n",
    "print(f\"p-value:\", pvalue)\n",
    "print(f\"test_stat:\", test_stat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2ee2a939",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:33.272473Z",
     "iopub.status.busy": "2024-09-06T02:32:33.272074Z",
     "iopub.status.idle": "2024-09-06T02:32:33.314867Z",
     "shell.execute_reply": "2024-09-06T02:32:33.313605Z"
    },
    "papermill": {
     "duration": 0.055168,
     "end_time": "2024-09-06T02:32:33.318073",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.262905",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data is not normally distributed.\n",
      "p-value: 6.263942656903057e-178\n",
      "test_stat: 0.37673520650313475\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/scipy/stats/_axis_nan_policy.py:573: UserWarning: scipy.stats.shapiro: For N > 5000, computed p-value may not be accurate. Current N is 143397.\n",
      "  res = hypotest_fun_out(*samples, **kwds)\n"
     ]
    }
   ],
   "source": [
    "test_stat, pvalue= stats.shapiro(df.loc[df['landing_page'] == 'new_page', 'converted'])\n",
    "if pvalue < 0.05:\n",
    "    print(\"Data is not normally distributed.\")\n",
    "else:\n",
    "    print(\"Data is normally distributed.\")\n",
    "print(f\"p-value:\", pvalue)\n",
    "print(f\"test_stat:\", test_stat)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aeb73298",
   "metadata": {
    "papermill": {
     "duration": 0.007805,
     "end_time": "2024-09-06T02:32:33.334607",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.326802",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "It can be seen that the data is not normally distributed so **non-parametric** is required. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f849c680",
   "metadata": {
    "papermill": {
     "duration": 0.008493,
     "end_time": "2024-09-06T02:32:33.351224",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.342731",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Variance Homogeneity\n",
    "\n",
    "**Variance Homogeneity**\n",
    "* H0: The variances between groups are homogeneous (equal).\n",
    "* H1: Variances between groups are not homogeneous (different)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "49a847f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:33.370265Z",
     "iopub.status.busy": "2024-09-06T02:32:33.369727Z",
     "iopub.status.idle": "2024-09-06T02:32:33.442696Z",
     "shell.execute_reply": "2024-09-06T02:32:33.441215Z"
    },
    "papermill": {
     "duration": 0.085882,
     "end_time": "2024-09-06T02:32:33.445250",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.359368",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Variances are homogeneous\n",
      "p-value: 0.2322897281547632\n",
      "test_stat: 1.4267917566652295\n"
     ]
    }
   ],
   "source": [
    "test_stat, pvalue= stats.levene(df.loc[df['landing_page'] == 'old_page', 'converted'],\n",
    "                                df.loc[df['landing_page'] == 'new_page', 'converted'])\n",
    "if pvalue < 0.05:\n",
    "    print(\"Variances are not homogeneous\")\n",
    "else:\n",
    "    print(\"Variances are homogeneous\")\n",
    "print(f\"p-value:\", pvalue)\n",
    "print(f\"test_stat:\", test_stat)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8fb1a217",
   "metadata": {
    "papermill": {
     "duration": 0.007908,
     "end_time": "2024-09-06T02:32:33.461577",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.453669",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Because **Data is Not Normally Distributed** but the **Variance Are Homogeneous** we will use Non-Parametric test **(Mann-Whitney U test)**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "43eeb261",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T02:32:33.479681Z",
     "iopub.status.busy": "2024-09-06T02:32:33.479236Z",
     "iopub.status.idle": "2024-09-06T02:32:33.568389Z",
     "shell.execute_reply": "2024-09-06T02:32:33.567148Z"
    },
    "papermill": {
     "duration": 0.101118,
     "end_time": "2024-09-06T02:32:33.570855",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.469737",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mann-Whitney U Test: p-value= 0.23228910319572493\n",
      "Mann-Whitney U Test: test_stat= 10288759668.0\n"
     ]
    }
   ],
   "source": [
    "test_stat, pvalue= stats.mannwhitneyu(df.loc[df['landing_page'] == 'old_page', 'converted'],\n",
    "                                df.loc[df['landing_page'] == 'new_page', 'converted'])\n",
    "\n",
    "print(f\"Mann-Whitney U Test: p-value=\", pvalue)\n",
    "print(f\"Mann-Whitney U Test: test_stat=\", test_stat)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91a98597",
   "metadata": {
    "papermill": {
     "duration": 0.007858,
     "end_time": "2024-09-06T02:32:33.587043",
     "exception": false,
     "start_time": "2024-09-06T02:32:33.579185",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The conclusion is that the results obtained fail to reject H0 or zero hypothesis because the p-value is more than 0.05 so it can be said that the old_page can still be applied to the website because the new_page does not show a significant impact."
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 2133464,
     "sourceId": 3548178,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30761,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 7.41284,
   "end_time": "2024-09-06T02:32:34.216242",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-06T02:32:26.803402",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
